import{_ as a,c as i,a2 as l,o as e}from"./chunks/framework.DPuwY6B9.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"prometheus/relabel_configs.md","filePath":"prometheus/relabel_configs.md","lastUpdated":1729815932000}'),t={name:"prometheus/relabel_configs.md"};function n(p,s,r,h,o,k){return e(),i("div",null,s[0]||(s[0]=[l(`<h2 id="重置标签" tabindex="-1">重置标签 <a class="header-anchor" href="#重置标签" aria-label="Permalink to &quot;重置标签&quot;">​</a></h2><p>教程：<a href="https://blog.csdn.net/qq_42883074/article/details/115894190" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_42883074/article/details/115894190</a></p><h3 id="标签选择" tabindex="-1">标签选择 <a class="header-anchor" href="#标签选择" aria-label="Permalink to &quot;标签选择&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">relabel_configs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">source_labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对源标签做操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  	  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">team</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  	regex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">joy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 正则表达式(全限定)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  	action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">keep</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 操作</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  	target_label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">belones</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 将源标签转换为自定义标签</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  	replacement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">no1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 将源内容转换为自定内容</span></span></code></pre></div><p>action: 操作</p><ul><li>keep : labels 中含有 source_labels 定义的目标，如果多个，则需要并且</li><li>drop: labels 中不含有 source_labels 定义的目标</li><li>replace: 替换，配合 replacement、target_label 使用，将目标 labels 替换成自定义 labels ，且可以将 目标 labels 的值替换成自定义内容</li><li>labelmap 重新修改标签名</li></ul><p>source_labels：对目标中 labels 含有 source_labels 中定义的目标，可以多个 \`\`</p><ul><li><p>配合 action: keep</p><ul><li>regex: foo -- source_labels 值等于 foo 的</li><li>regex: foo|bar -- source_labels 值等于 foo 或 bar 的</li><li>regex: foo;bar -- source_labels 第一个值等于 foo 并且，第二个值等于 bar 的</li><li>regex: 可以使用正则表达式匹配</li></ul></li><li><p>配合 action: drop</p><ul><li>regex: foo -- source_labels 值不等于 foo 的</li><li>regex: foo|bar -- source_labels 值不等于 foo 或 bar 的</li><li>regex: foo;bar -- source_labels 第一个值不等于 foo 并且，第二个值不等于 bar 的</li><li>regex: 可以使用正则表达式匹配</li></ul></li></ul><p>​</p><p>wmm0iqKQAAJ3e624FigLUm-4FZhWjgNA</p>`,10)]))}const g=a(t,[["render",n]]);export{d as __pageData,g as default};
