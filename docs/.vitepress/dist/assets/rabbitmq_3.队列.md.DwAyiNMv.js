import{_ as s,c as a,a2 as i,o as e}from"./chunks/framework.DPuwY6B9.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"rabbitmq/3.队列.md","filePath":"rabbitmq/3.队列.md","lastUpdated":1729815932000}'),d={name:"rabbitmq/3.队列.md"};function h(l,t,r,n,p,k){return e(),a("div",null,t[0]||(t[0]=[i('<h3 id="声明队列" tabindex="-1">声明队列 <a class="header-anchor" href="#声明队列" aria-label="Permalink to &quot;声明队列&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">queue, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> channel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">QueueDeclare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-queue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>参数说明</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>name</td><td>队列名字</td><td>如果为空，则会自动生成一个全局唯一的名字</td></tr><tr><td>durable</td><td>是否需要持久化</td><td>默认保存在内存中</td></tr><tr><td>autoDelete</td><td>是否自动删除队列</td><td>最后一个消费者断开连接后，true：自动删除队列，false：不删除</td></tr><tr><td>exclusive</td><td>是否排他</td><td>true：只能一个消费者消费，false：可被多个消费者消费</td></tr><tr><td>noWait</td><td>声明是否等待服务确认</td><td>true：无需等待服务器确认，false：无需等待服务器确认</td></tr><tr><td>args</td><td>其他参数</td><td></td></tr></tbody></table>',4)]))}const c=s(d,[["render",h]]);export{E as __pageData,c as default};
