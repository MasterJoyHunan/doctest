import{_ as e,c as s,a2 as t,o as n}from"./chunks/framework.DPuwY6B9.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"k8s笔记/readme.md","filePath":"k8s笔记/readme.md","lastUpdated":1729815932000}'),p={name:"k8s笔记/readme.md"};function i(l,a,o,c,d,r){return n(),s("div",null,a[0]||(a[0]=[t(`<h3 id="k8s-组成" tabindex="-1">k8s 组成 <a class="header-anchor" href="#k8s-组成" aria-label="Permalink to &quot;k8s 组成&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/20201118/362538626eeecb2e917b9da16f652970.png" alt="http://tc.masterjoy.top/20201118/362538626eeecb2e917b9da16f652970.png"></p><ul><li>主节点（控制面板）-- 控制面板的组件持有井控制集群状态，但是它们不运行你的应用程序。这是由工作节点完成的 <ul><li>etcd -- 可靠的分布式存储，持久化存储集群配置</li><li>api 服务器 -- 其他控制面板组件都要和它通信</li><li>scheduler -- 调度你的应用(为应用的每个可部署组件分配一 个工作节 点〕</li><li>controller manager -- 它执行集群级别的功能，如复制组件、持续跟踪工作节点 、处理节点失败 等</li></ul></li><li>工作节点 <ul><li>kubelet -- 与 api 服务器通信，并管理所在节点的容器</li><li>kube-proxy -- 负载均衡</li><li>容器 -- docker 或 rtk 等其他.......</li></ul></li></ul><h3 id="k8s-描述文件部署过程" tabindex="-1">k8s 描述文件部署过程 <a class="header-anchor" href="#k8s-描述文件部署过程" aria-label="Permalink to &quot;k8s 描述文件部署过程&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/20201119/874ab8ef044255f4e1ed67a700bfbf16.png" alt="http://tc.masterjoy.top/20201119/874ab8ef044255f4e1ed67a700bfbf16.png"></p><h3 id="运行进行镜像过程" tabindex="-1">运行进行镜像过程 <a class="header-anchor" href="#运行进行镜像过程" aria-label="Permalink to &quot;运行进行镜像过程&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/20201119/126cdab2d3314ed2b1754c73782aadc6.png" alt="http://tc.masterjoy.top/20201119/126cdab2d3314ed2b1754c73782aadc6.png"></p><h3 id="pod-、rc、service-的关系" tabindex="-1">pod 、rc、service 的关系 <a class="header-anchor" href="#pod-、rc、service-的关系" aria-label="Permalink to &quot;pod 、rc、service 的关系&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/20201120/47744c6bb1605f90a74fa400f89f12f8.png" alt="http://tc.masterjoy.top/20201120/47744c6bb1605f90a74fa400f89f12f8.png"></p><h3 id="configmap" tabindex="-1">configMap <a class="header-anchor" href="#configmap" aria-label="Permalink to &quot;configMap&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/20201211/514a056550f7f32b8a4f73eb389354fe.png" alt="http://tc.masterjoy.top/20201211/514a056550f7f32b8a4f73eb389354fe.png"></p><h3 id="事件链" tabindex="-1">事件链 <a class="header-anchor" href="#事件链" aria-label="Permalink to &quot;事件链&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/typory/image-20201223111332687.png" alt="image-20201223111332687"></p><h3 id="k8s-高可用" tabindex="-1">k8s 高可用 <a class="header-anchor" href="#k8s-高可用" aria-label="Permalink to &quot;k8s 高可用&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/typory/image-20201223090846400.png" alt="image-20201223090846400"></p><h3 id="rbac-角色绑定" tabindex="-1">RBAC 角色绑定 <a class="header-anchor" href="#rbac-角色绑定" aria-label="Permalink to &quot;RBAC 角色绑定&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/typory/image-20201224092438106.png" alt="image-20201224092438106"></p><h3 id="典型-k8s-应用包含的组件" tabindex="-1">典型 k8s 应用包含的组件 <a class="header-anchor" href="#典型-k8s-应用包含的组件" aria-label="Permalink to &quot;典型 k8s 应用包含的组件&quot;">​</a></h3><p><img src="http://tc.masterjoy.top/typory/image-20201230155007656.png" alt="image-20201230155007656"></p><h3 id="创建configmap" tabindex="-1">创建configMap <a class="header-anchor" href="#创建configmap" aria-label="Permalink to &quot;创建configMap&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl create configmap mysql-redis-config --from-file=config_map_file</span></span></code></pre></div><h3 id="创建证书" tabindex="-1">创建证书 <a class="header-anchor" href="#创建证书" aria-label="Permalink to &quot;创建证书&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl create secret tls [name] --cert=[xx] --key=[xxx]</span></span></code></pre></div><h3 id="创建证书2" tabindex="-1">创建证书2 <a class="header-anchor" href="#创建证书2" aria-label="Permalink to &quot;创建证书2&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl create secret generic fortune-https --from-file=[dir or file]</span></span></code></pre></div><h3 id="将本地文件配置文件上传至服务器" tabindex="-1">将本地文件配置文件上传至服务器 <a class="header-anchor" href="#将本地文件配置文件上传至服务器" aria-label="Permalink to &quot;将本地文件配置文件上传至服务器&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scp -r ./* root@masterjoy.top:/home/k8s/config</span></span></code></pre></div><h3 id="k8s-进行滚动升级" tabindex="-1">k8s 进行滚动升级 <a class="header-anchor" href="#k8s-进行滚动升级" aria-label="Permalink to &quot;k8s 进行滚动升级&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl apply -f xxx.yaml --record</span></span></code></pre></div><p>滚动升级的几种方式</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl edit deployment [xxx]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl patch deployment [xxx] -p &#39;{&quot;spec&quot;:{&quot;template&quot;: {&quot;spec&quot;: {&quot;containers&quot;: [ {&quot;name&quot;:&quot;nodejs&quot;, &quot;image&quot;: &quot;luksa/kubia:v2&quot;}]}}}}&#39;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 常用</span></span>
<span class="line"><span>kubectl apply -f [xxx]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl replace</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 常用</span></span>
<span class="line"><span>kubectl set image deployment [xxx] ContainerName=ImageName</span></span></code></pre></div><p><code>--record</code> 会记录升级过程，使用了该参数，在升级过程中，使用下面的命令，会打印详细升级日志</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl rollout status deployment [xxx]</span></span></code></pre></div><h3 id="k8s-查看升级记录-前提是必须加上-record-参数" tabindex="-1">k8s 查看升级记录，前提是必须加上 --record 参数 <a class="header-anchor" href="#k8s-查看升级记录-前提是必须加上-record-参数" aria-label="Permalink to &quot;k8s 查看升级记录，前提是必须加上 --record 参数&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl rollout history deployment [xxx]</span></span></code></pre></div><p>返回</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>deployment.apps/shttp-dp</span></span>
<span class="line"><span>REVISION  CHANGE-CAUSE</span></span>
<span class="line"><span>1         kubectl.exe apply --filename=deployment/deployment.yaml --record=true</span></span>
<span class="line"><span>3         kubectl.exe apply --filename=deployment/deployment.yaml --record=true</span></span>
<span class="line"><span>4         kubectl.exe apply --filename=deployment/deployment.yaml --record=true</span></span></code></pre></div><h3 id="k8s-进行回滚升级" tabindex="-1">k8s 进行回滚升级 <a class="header-anchor" href="#k8s-进行回滚升级" aria-label="Permalink to &quot;k8s 进行回滚升级&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl rollout undo deployment [xxx]</span></span></code></pre></div><p>如果需要回滚到指定的版本</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl rollout undo deployment [xxx] --to-revision=1</span></span></code></pre></div><p><code>--to-revision</code> 指的是上面 <code>kubectl rollout history</code> 里的 <code>revision</code></p><h3 id="k8s-进行暂停和启用-并使用该特性作为金丝雀发布" tabindex="-1">k8s 进行暂停和启用 并使用该特性作为金丝雀发布 <a class="header-anchor" href="#k8s-进行暂停和启用-并使用该特性作为金丝雀发布" aria-label="Permalink to &quot;k8s 进行暂停和启用 并使用该特性作为金丝雀发布&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl rollout pause deployment [xxx]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl rollout resume deployment [xxx]</span></span></code></pre></div><h3 id="k8s-创建一个临时的-pod" tabindex="-1">k8s 创建一个临时的 POD <a class="header-anchor" href="#k8s-创建一个临时的-pod" aria-label="Permalink to &quot;k8s 创建一个临时的 POD&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl run -it srvlookup --image=tutum/dnsutils --rm --restart=Never -- dig SRV shttps-ss.default.svc.cluster.local</span></span></code></pre></div><p>上面的命令运行 一个名为srvlookup 的一次性pod(--restart=Never ) , 它会关联控制台(-it )并且在终止后立即删除(--rm)。 这个pod依据tutum/ dnsutils镜像启动单独的容器</p><h3 id="k8s-强制删除某个pod" tabindex="-1">k8s 强制删除某个POD <a class="header-anchor" href="#k8s-强制删除某个pod" aria-label="Permalink to &quot;k8s 强制删除某个POD&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubectl delete po [XXX] --force --grace-period 0</span></span></code></pre></div><h3 id="优化展示" tabindex="-1">优化展示 <a class="header-anchor" href="#优化展示" aria-label="Permalink to &quot;优化展示&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> kubectl get po -o custom-columns=POD:metadata.name,NODE:spec.nodeName --sort-by metadata.name -n kube-system</span></span></code></pre></div><p><code>custom-columns</code> 优化展示某个项 <code>--sort-by</code> 对某个项目进行排序</p><h3 id="为某个节点添加污点" tabindex="-1">为某个节点添加污点 <a class="header-anchor" href="#为某个节点添加污点" aria-label="Permalink to &quot;为某个节点添加污点&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubect1 taint node [some-node-name] [key]=[value]:[effect]</span></span>
<span class="line"><span>e.g.</span></span>
<span class="line"><span>kubect1 taint node node.master node-type=prod:NoSchedule</span></span></code></pre></div><h3 id="为某个节点删除污点" tabindex="-1">为某个节点删除污点 <a class="header-anchor" href="#为某个节点删除污点" aria-label="Permalink to &quot;为某个节点删除污点&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubect1 taint node [some-node-name] [key]</span></span>
<span class="line"><span>e.g.</span></span>
<span class="line"><span>kubect1 taint node node.master node-type</span></span></code></pre></div>`,61)]))}const b=e(p,[["render",i]]);export{u as __pageData,b as default};
